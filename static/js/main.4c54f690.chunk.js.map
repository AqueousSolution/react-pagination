{"version":3,"sources":["Components/Posts.js","Components/Pagination.js","App.js","index.js"],"names":["Posts","posts","loading","className","map","post","key","id","title","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","pageNumber","onClick","href","App","useState","setPosts","setLoading","currentPage","setCurrentPage","useEffect","a","fetch","res","json","data","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAiBeA,G,MAfD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MACf,OADoC,EAAdC,QAEb,0CAGP,wBAAIC,UAAU,mBACXF,EAAMG,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,GAAIJ,UAAU,mBACzBE,EAAKG,aCgBDC,EAxBI,SAAC,GAElB,IAF8D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACxCC,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACzDD,EAAYI,KAAKH,GAEnB,OACE,6BACE,wBAAIX,UAAU,cACXU,EAAYT,KAAI,SAAAc,GAAU,OACzB,wBAAIZ,IAAKY,EAAYf,UAAU,aAC7B,uBACEgB,QAAS,kBAAMP,EAASM,IACxBE,KAAK,KACLjB,UAAU,aAETe,UC0BAG,MAtCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNrB,EADM,KACCsB,EADD,OAEiBD,oBAAS,GAF1B,mBAENpB,EAFM,KAEGsB,EAFH,OAGyBF,mBAAS,GAHlC,mBAGNG,EAHM,KAGOC,EAHP,OAI2BJ,mBAAS,IAJpC,mBAINZ,EAJM,UAMbiB,qBAAU,WACRH,GAAW,GACK,uCAAG,8BAAAI,EAAA,sEACCC,MAAM,8CADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,OAEXC,EAFW,OAGjBT,EAASS,GACTR,GAAW,GAJM,2CAAH,oDAMhBS,KACC,IAGH,IAAMC,EAAkBT,EAAcf,EAChCyB,EAAmBD,EAAkBxB,EACrC0B,EAAenC,EAAMoC,MAAMF,EAAkBD,GAKnD,OACE,yBAAK/B,UAAU,kBACb,wBAAIA,UAAU,qBAAd,cACA,kBAAC,EAAD,CAAOF,MAAOmC,EAAclC,QAASA,IACrC,kBAAC,EAAD,CACEQ,aAAcA,EACdC,WAAYV,EAAMqC,OAClB1B,SATW,SAAAM,GAAU,OAAIQ,EAAeR,Q,MCtBhDqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4c54f690.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Posts = ({ posts, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n  return (\n    <ul className=\"list-group mb-4\">\n      {posts.map(post => (\n        <li key={post.id} className=\"list-group-item\">\n          {post.title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pageNumbers.map(pageNumber => (\n          <li key={pageNumber} className=\"page-item\">\n            <a\n              onClick={() => paginate(pageNumber)}\n              href=\"#!\"\n              className=\"page-link\"\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Posts from \"./Components/Posts\";\nimport Pagination from \"./Components/Pagination\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchPosts = async () => {\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      const data = await res.json();\n      setPosts(data);\n      setLoading(false);\n    };\n    fetchPosts();\n  }, []);\n\n  //Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  //Change Page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-primary mb-4\">Pagination</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}